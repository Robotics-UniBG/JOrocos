package RTT.corba;


/**
* RTT/corba/CConfigurationInterfaceOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ConfigurationInterface.idl
* Wednesday, July 11, 2012 5:26:13 PM CEST
*/


/**
	 * Exposes both attributes and properties
	 * of a service.
	 * @ingroup CompIDL
	 */
public interface CConfigurationInterfaceOperations 
{
  String[] getAttributeList ();
  RTT.corba.CConfigurationInterfacePackage.CProperty[] getPropertyList ();
  org.omg.CORBA.Any getAttribute (String name);
  boolean setAttribute (String name, org.omg.CORBA.Any value);
  boolean hasAttribute (String name);
  boolean hasProperty (String name);

  /**
  	     * Get a property by name. You can scope the name for
  	     * entering sub-properties. For example 'controlparameters.gains.k'
  	     * to retrieve nested property with name 'k'.
  	     */
  org.omg.CORBA.Any getProperty (String name);

  /**
  	     * Set a property by name. You can scope the name for
  	     * entering sub-properties. For example 'controlparameters.gains.k'
  	     * to write nested property with name 'k'.
  	     */
  boolean setProperty (String name, org.omg.CORBA.Any value);

  /**
  	     * Return the type of the attribute or property.
  	     */
  String getPropertyType (String name);
  String getAttributeType (String name);

  /**
  	     * Return the type name of the expression as it is known
  	     * to the Orocos Type System.
  	     */
  String getPropertyTypeName (String name);
  String getAttributeTypeName (String name);

  /**
  	     * Return the result of an attribute or property as a text string.
  	     */
  String attributeToString (String name);
  String propertyToString (String name);

  /**
  	     * Assign a given property or attribute a stringified value.
  	     * @return true if the assignment could be done.
  	     */
  boolean attributeFromString (String name, String value);
  boolean propertyFromString (String name, String value);

  /**
  	     * Returns true if the attribute can be changed.
  	     */
  boolean isAttributeAssignable (String name);
} // interface CConfigurationInterfaceOperations
