package RTT.corba;


/**
* RTT/corba/CRemoteChannelElementOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DataFlow.idl
* Wednesday, July 11, 2012 5:26:42 PM CEST
*/


/**
     * The advanced channel element interface, used by Orocos
     * to relay over-CORBA data flow connections.
     */
public interface CRemoteChannelElementOperations  extends RTT.corba.CChannelElementOperations
{

  /**
           * Used to inform this channel element which the other
           * side is such that they can relay a signal or disconnect.
           */
  void setRemoteSide (RTT.corba.CRemoteChannelElement other);

  /**
           * Used by the 'remote' side to inform this channel element that new data
           * is available for reading.
           * @return false if this channel became invalidated.
           */
  boolean remoteSignal ();

  /**
           * Used by the 'remote' side to inform this channel element
           * that the connection is been cleaned up.
           * @param writer_to_reader Since channel elements are chained,
           * we need to know who initiated the disconnect: starting from
           * the output port (writer_to_reader == true) or from the
           * input port (writer_to_reader == false)
           */
  void remoteDisconnect (boolean writer_to_reader);
} // interface CRemoteChannelElementOperations
